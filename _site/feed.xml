<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="https://curtisnewbie.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://curtisnewbie.github.io/" rel="alternate" type="text/html" /><updated>2024-04-23T11:08:23+08:00</updated><id>https://curtisnewbie.github.io/feed.xml</id><title type="html">somewhere in the ocean</title><subtitle>Til the end</subtitle><author><name>Yongjie Zhuang</name></author><entry><title type="html">Interesting Resources</title><link href="https://curtisnewbie.github.io/learning/2024/04/15/interesting-resources.html" rel="alternate" type="text/html" title="Interesting Resources" /><published>2024-04-15T20:00:00+08:00</published><updated>2024-04-15T20:00:00+08:00</updated><id>https://curtisnewbie.github.io/learning/2024/04/15/interesting-resources</id><content type="html" xml:base="https://curtisnewbie.github.io/learning/2024/04/15/interesting-resources.html"><![CDATA[<p>Interesting papers, books and websites are listed here.</p>

<p>Some interesting papers:</p>

<ul>
  <li><a href="https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf">Dynamo: Amazon’s Highly Available Key-value Store</a></li>
</ul>

<p>Some interesting websites:</p>

<ul>
  <li><a href="https://github.com/vadv/gopher-lua-libs">github vadv/gopher-lua-libs</a></li>
  <li><a href="https://github.com/yuin/gopher-lua">github yuin/gopher-lua</a></li>
  <li><a href="https://www.infoq.com/presentations/shopify-architecture-flash-sale/">Shopify’s Architecture to Handle the World’s Biggest Flash Sales</a></li>
  <li><a href="https://dev.mysql.com/blog-archive/hash-join-in-mysql-8/">Hash join in MySQL 8</a></li>
  <li><a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/index.html">The Computer Language Benchmark Game</a></li>
  <li><a href="https://martinfowler.com/articles/lmax.html">Martin Fowler - The LMAX Architecture</a></li>
  <li><a href="https://lmax-exchange.github.io/disruptor/">Github Page - LMAX Disruptor</a></li>
  <li><a href="https://dave.cheney.net/2013/06/02/why-is-a-goroutines-stack-infinite">Dave Cheney - Why is a Goroutine’s stack infinite?</a></li>
  <li><a href="https://docs.google.com/document/u/0/d/1yIAYmbvL3JxOKOjuCyon7JhW4cSv1wy5hC0ApeGMV9s/pub?pli=1">Go channels on steroids</a></li>
  <li><a href="https://docs.oracle.com/en/java/javase/20/gctuning/index.html#GUID-0394E76A-1A8F-425E-A0D0-B48A3DC82B42">jdk20 - HotSpot Virtual Machine Garbage Collection Tuning Guide</a></li>
  <li><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/toc.html">jdk8 - Java Platform, Standard Edition Troubleshooting Guide</a></li>
  <li><a href="https://tschatzl.github.io/2022/08/04/concurrent-marking.html">Concurrent Marking in G1</a></li>
  <li><a href="https://landontclipp.github.io/blog/2023/07/15/analyzing-go-heap-escapes/#use-of-reflection">Analyzing Go Heap Escapes</a></li>
  <li><a href="https://chris124567.github.io/2021-06-21-go-performance/">Reducing Memory Allocations in Golang</a></li>
  <li><a href="https://github.com/redis/redis-specifications/blob/master/protocol/RESP2.md">Github - RESP2 Protocol Specification</a></li>
  <li><a href="https://medium.com/@chenymj23/diving-into-golang-how-does-it-effectively-wrap-the-functionality-of-epoll-26065f0654ba">Diving into Golang: How does it effectively wrap the functionality of epoll?</a></li>
  <li><a href="https://blog.mike.norgate.xyz/unlocking-go-slice-performance-navigating-sync-pool-for-enhanced-efficiency-7cb63b0b453e">Unlocking Go Slice Performance: Navigating sync.Pool for Enhanced Efficiency</a></li>
  <li><a href="https://gist.github.com/JBlond/2fea43a3049b38287e5e9cefc87b2124">JBlond Gist - Bash Colors</a></li>
  <li><a href="https://k3s.io/">k3s</a></li>
  <li><a href="https://blog.ragozin.info/2011/06/understanding-gc-pauses-in-jvm-hotspots.html">Understanding GC pauses in JVM, HotSpot’s minor GC (2011)</a></li>
  <li><a href="https://oceanbase.github.io/miniob/miniob-introduction.html">MiniOB Github Page - zh-cn</a></li>
  <li><a href="https://github.com/oceanbase/miniob?tab=readme-ov-file">MiniOB Github - zh-cn</a></li>
  <li><a href="https://github.com/oceanbase/oceanbase">Oceanbase Github</a></li>
  <li><a href="https://en.oceanbase.com/docs/oceanbase-database">Oceanbase Doc</a></li>
  <li><a href="https://netflix.github.io/dgs/">Netflix DGS Framework</a></li>
  <li><a href="https://github.com/Netflix/conductor">Netflix Conductor</a></li>
  <li><a href="https://github.com/conductor-sdk/conductor-examples/tree/main">Conductor-sdk</a></li>
  <li><a href="https://orkes.io/content/">Orkes - Conductor</a></li>
  <li><a href="https://shipilev.net/jvm/anatomy-quarks/">JVM Anatomy Quarks</a></li>
  <li><a href="https://netflixtechblog.com/bending-pause-times-to-your-will-with-generational-zgc-256629c9386b">Netflix Technology Blog - Bending pause times to your will with Generational ZGC</a></li>
  <li><a href="https://www.infoq.com/presentations/netflix-java/">InfoQ - How Netflix Really Uses Java</a></li>
  <li><a href="https://go.dev/ref/spec">The Go Programming Language Specification</a></li>
  <li><a href="https://go.dev/doc/effective_go">Effective Go</a></li>
  <li><a href="https://go.dev/ref/mem">Go Memory Model</a></li>
  <li><a href="https://netflixtechblog.com/linux-performance-analysis-in-60-000-milliseconds-accc10403c55">Netflix Technology Blog - Linux Performance Analysis in 60,000 milliseconds</a></li>
  <li><a href="https://www.redhat.com/sysadmin/cgroups-part-one">A Linux sysadmin’s introduction to cgroups</a></li>
  <li><a href="https://www.cs.unh.edu/cnrg/people/gherrin/linux-net.html">Glenn Herrin (2000) Linux IP Networking</a></li>
  <li><a href="https://www.cloudcentric.dev/implementing-a-skip-list-in-go/">Implementing a skip list in go</a></li>
  <li><a href="https://github.com/redis/redis/blob/unstable/src/ziplist.c">ziplist.c source code in github.com/redis</a></li>
  <li><a href="https://eclipsesource.com/blogs/2013/01/21/10-tips-for-using-the-eclipse-memory-analyzer/">10 Tips for using the Eclipse Memory Analyzer</a></li>
  <li><a href="https://tikv.org/deep-dive/key-value-engine/b-tree-vs-lsm/">tikv - B-Tree vs LSM-Tree</a></li>
  <li><a href="https://medium.com/eureka-engineering/understanding-allocations-in-go-stack-heap-memory-9a2631b5035d">Understanding Allocations in Go</a></li>
  <li><a href="https://pkg.go.dev/cmd/trace">golang - cmd/trace</a></li>
  <li><a href="https://medium.com/@ankur_anand/a-visual-guide-to-golang-memory-allocator-from-ground-up-e132258453ed">A visual guide to Go Memory Allocator from scratch</a></li>
  <li><a href="https://java-decompiler.github.io/">Java Decompiler</a></li>
  <li><a href="https://catonmat.net/bash-one-liners-explained-part-one">Bash One-Liners Explained</a></li>
  <li><a href="https://tldp.org/HOWTO/IP-Masquerade-HOWTO/index.html">Linux IP Masquerade HOWTO, David A. Ranch</a></li>
  <li><a href="https://mysql.rjweb.org/doc.php/deletebig">MySQL Big DELETEs</a></li>
  <li><a href="https://research.swtch.com/interfaces">Go Data Structures: Interfaces</a></li>
  <li><a href="https://morsmachine.dk/go-scheduler">The Go Scheduler</a></li>
  <li><a href="https://www.kernel.org/doc/html/latest/index.html">Linux Kernel Documentation</a></li>
  <li><a href="https://use-the-index-luke.com/sql/preface">Use the index, Luke - A Guide to Database Performance for Developers</a></li>
</ul>]]></content><author><name>Yongjie Zhuang</name></author><category term="Learning" /><summary type="html"><![CDATA[Interesting papers, books and websites are listed here.]]></summary></entry><entry><title type="html">Random Ideas</title><link href="https://curtisnewbie.github.io/ideas/2024/04/15/random-ideas.html" rel="alternate" type="text/html" title="Random Ideas" /><published>2024-04-15T19:00:00+08:00</published><updated>2024-04-15T19:00:00+08:00</updated><id>https://curtisnewbie.github.io/ideas/2024/04/15/random-ideas</id><content type="html" xml:base="https://curtisnewbie.github.io/ideas/2024/04/15/random-ideas.html"><![CDATA[<p>List of random ideas:</p>

<ul>
  <li>Implement a mini version of Git to understand how it works.</li>
  <li>Implement a simple B+ tree based database.</li>
  <li>Implement a mini-redis using java like the <a href="https://github.com/curtisnewbie/mini-redis">curtisnewbie/mini-redis</a> one in golang.
    <ul>
      <li>Call it mini-jredis maybe, just try to be more familiar with socket programming in java.</li>
    </ul>
  </li>
  <li>Have a look at netflix/conductor, understand roughly how it works and implement a mini workflow engine.
    <ul>
      <li>It does seem like a workflow engine is roughly a distributed queue + an orchestrator service + some definitions of worker.</li>
      <li>https://github.com/Netflix/conductor</li>
      <li>https://github.com/conductor-sdk/conductor-examples/tree/main</li>
      <li>https://orkes.io/content/</li>
    </ul>
  </li>
  <li>Document how to use pprof in golang.</li>
  <li>Write something about jvm performance evaluation. Document all the means to identify performance issue, e.g., CPU/IO/GC and so on.</li>
  <li>Implement a simple CI/CD application.</li>
  <li>Implement a rule engine.</li>
</ul>]]></content><author><name>Yongjie Zhuang</name></author><category term="Ideas" /><summary type="html"><![CDATA[List of random ideas:]]></summary></entry><entry><title type="html">Learning Jekyll</title><link href="https://curtisnewbie.github.io/learning/2024/04/15/learning-jekyll.html" rel="alternate" type="text/html" title="Learning Jekyll" /><published>2024-04-15T13:00:00+08:00</published><updated>2024-04-15T13:00:00+08:00</updated><id>https://curtisnewbie.github.io/learning/2024/04/15/learning-jekyll</id><content type="html" xml:base="https://curtisnewbie.github.io/learning/2024/04/15/learning-jekyll.html"><![CDATA[<p><strong><em>This is my first blog. We are learning Jekyll today, documenting jekyll stuff inside a static site generated by jekyll!</em></strong></p>

<p>The following are useful websites for learning jekyll:</p>

<ul>
  <li>Jekyllrb Official: https://jekyllrb.com/</li>
  <li>Github Page: https://docs.github.com/en/pages/quickstart</li>
</ul>

<h2 id="install-jekyll">Install Jekyll</h2>

<p>To install jekyll on Macos, we will first use brew to install a separate ruby, e.g., ruby@3. Macos has a built-in ruby installed, but we will need root priviliege to install packages, i.e., running ruby commands with sudo, it’s not safe so we won’t do that.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>ruby@3
</code></pre></div></div>

<p>After the installation, we export the path to ruby@3. Of course we can run <code class="language-plaintext highlighter-rouge">brew link</code>, but it won’t work because there is already one pre-installed. If you run <code class="language-plaintext highlighter-rouge">brew link</code>, you will see the warning messages.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Warning: Refusing to <span class="nb">link </span>macOS provided/shadowed software: ruby
If you need to have ruby first <span class="k">in </span>your PATH, run:
  <span class="nb">echo</span> <span class="s1">'export PATH="/usr/local/opt/ruby/bin:$PATH"'</span> <span class="o">&gt;&gt;</span> ~/.profile

<span class="c"># ...</span>
</code></pre></div></div>

<p>We can follow it’s recommendation, we export the path in our <code class="language-plaintext highlighter-rouge">~/.profile</code> file or <code class="language-plaintext highlighter-rouge">~/.bashrc</code> file.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"/usr/local/opt/ruby/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
</code></pre></div></div>

<p>Til this point, ruby@3 is successfully installed. You may setup a mirror registry like the following to speed things up a bit. Usually you don’t need to change the sources, unless you are from certain countries like me :D</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># setup mirror source for gem</span>
gem sources <span class="nt">--add</span> https://mirrors.tuna.tsinghua.edu.cn/rubygems/ <span class="nt">--remove</span> https://rubygems.org/
</code></pre></div></div>

<p>Then, we will also need to install <code class="language-plaintext highlighter-rouge">bundle</code>, which is a dependency manager for ruby (kinda), as well as <code class="language-plaintext highlighter-rouge">jekyll</code>, the package that we need!</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>bundler jekyll
</code></pre></div></div>

<p>We can also setup the source address for bundle! And yes, it’s completely optional.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle config mirror.https://rubygems.org https://mirrors.tuna.tsinghua.edu.cn/rubygems
</code></pre></div></div>

<p>Then we can start following the tutorial and create our first jekyll project.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll new my-awesome-site
</code></pre></div></div>

<p>We can <code class="language-plaintext highlighter-rouge">cd</code> into it, and serve the website in dev mode.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>

<p>In the meantime, if you are using ruby@3 like me, for whatever reason, you may see a warning message as follows. I don’t really know what causes it, but it seems like jekyll is actually working fine. I personally believes that it’s related to the version of our dependencies, some stuff may be deprecated.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Deprecation Warning: Using / <span class="k">for </span>division outside of calc<span class="o">()</span> is deprecated and will be removed <span class="k">in </span>Dart Sass 2.0.0.

Recommendation: math.div<span class="o">(</span><span class="nv">$spacing</span><span class="nt">-unit</span>, 2<span class="o">)</span> or calc<span class="o">(</span><span class="nv">$spacing</span><span class="nt">-unit</span> / 2<span class="o">)</span>

More info and automated migrator: https://sass-lang.com/d/slash-div

   ╷
40 │   margin-bottom: <span class="nv">$spacing</span><span class="nt">-unit</span> / 2<span class="p">;</span>
   │                  ^^^^^^^^^^^^^^^^^
   ╵
    ../../../../minima-2.5.1/_sass/minima/_base.scss 40:18  @import
    minima.scss 48:3                                        @import
</code></pre></div></div>

<p>Lukily, I did find a way to fix it (by muting the warning messages, lol).</p>

<p>Inside _config.yml, we add the following properties:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">sass</span><span class="pi">:</span>
  <span class="na">quiet_deps</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<p>Run <code class="language-plaintext highlighter-rouge">jekyll serve</code> again, we will see our beautiful website on <code class="language-plaintext highlighter-rouge">http://localhost:4000</code>.</p>

<h2 id="the-basic">The Basic</h2>

<p>By default jekyll uses theme <code class="language-plaintext highlighter-rouge">minima</code>, you are free to change it.</p>

<p>A jekyll project contains multiple <code class="language-plaintext highlighter-rouge">_***</code> directories. The <code class="language-plaintext highlighter-rouge">_posts</code> directory store the posts you write. The <code class="language-plaintext highlighter-rouge">_site</code> directory stores the static files generated by jekyll, so you will not modify files in this directory.</p>

<p>File <code class="language-plaintext highlighter-rouge">_config.yml</code> includes the basic configuration for your jekyll website. There are also the <code class="language-plaintext highlighter-rouge">about.markdown</code> and <code class="language-plaintext highlighter-rouge">index.markdown</code> files in root directory, you can modify the content of these two files as well as the markdown files in <code class="language-plaintext highlighter-rouge">_posts</code>.</p>

<p>Once you have done writing the content, you can run <code class="language-plaintext highlighter-rouge">jekyll serve</code> to see the latest changes. All the changes are rendered and written to <code class="language-plaintext highlighter-rouge">_site</code> directory.</p>

<p>Most of the cases, you will be modifing files inside <code class="language-plaintext highlighter-rouge">_posts</code> directory. The filename must follow the following convension: <code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code>, or else the posts are not displayed on webpage.</p>

<p>e.g.,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2024-04-01-learning-go.markdown
2024-04-02-learning-js.markdown
2024-04-03-learning-java.markdown
</code></pre></div></div>

<p>To better understand the file hierarchy, the following is the file tree of a demo project.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">.</span>
├── 404.html
├── Gemfile
├── Gemfile.lock
├── _config.yml
├── _posts
│   ├── 2024-04-15-learning-jekyll.markdown
├── _site
│   ├── ...
├── about.markdown
└── index.markdown
</code></pre></div></div>

<p>If we want to create a new post, we can just simply copy the existing post file in <code class="language-plaintext highlighter-rouge">_posts</code>, modify the content and that’s it.</p>

<p>E.g., a new file named <code class="language-plaintext highlighter-rouge">2024-04-15-my-first-blog.markdown</code>.</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s2">"</span><span class="s">My</span><span class="nv"> </span><span class="s">First</span><span class="nv"> </span><span class="s">Blog"</span>
<span class="na">date</span><span class="pi">:</span>   <span class="s">2024-04-15 13:00:00 +0800</span>
<span class="na">categories</span><span class="pi">:</span> <span class="s">random stuff</span>
<span class="na">published</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>

I am the first blog!
</code></pre></div></div>

<p>That’s it. This should be enough to get started :D</p>

<h2 id="host-jekyll-project-using-github-page">Host Jekyll Project Using Github Page</h2>

<p>Follow guidelines in https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/creating-a-github-pages-site-with-jekyll.</p>

<p>Before you push all the changes to upstream, build the jekyll project as follows:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle exec jekyll build
</code></pre></div></div>

<p>Go to github page, in repo’s Settings &gt; Pages, select your branch and root directory, and then save. The github page for your jekyll project will be deployed automatically using github action.</p>]]></content><author><name>Yongjie Zhuang</name></author><category term="Learning" /><summary type="html"><![CDATA[This is my first blog. We are learning Jekyll today, documenting jekyll stuff inside a static site generated by jekyll!]]></summary></entry></feed>